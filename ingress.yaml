# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#   name: odoo-ingress
#   labels:
#     app: odoo
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /
# spec:
#   rules:
#   # - host: odoo.info
#     http:
#       paths:
#       - path: /
#         backend:
#           serviceName: odoo-sv
#           servicePort: 8069
#       - path: /
#         backend:
#           serviceName: odoo2
#           servicePort: 8069
# apiVersion: networking.k8s.io/v1beta1
# kind: Ingress
# metadata:
#   name: odoo-ingress
#   # annotations:
#     # kubernetes.io/ingress.class: nginx
# spec:
#   rules:
#   - host: flectrahq.in
#     http:
#       paths:
#       - backend:
#           serviceName: odoo-sv
# #           servicePort: 8069
# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#   name: odoo-ingress
#   # namespace: "2048-game"
#   annotations:
#     kubernetes.io/ingress.class: alb
#     alb.ingress.kubernetes.io/scheme: internet-facing
#   labels:
#     app: odoo
# spec:
#   rules:
#     - host: flectrahq.in
#     - http:
#         paths:
#           - path: /*
#             backend:
#               serviceName: odoo-sv
#               servicePort: 8069
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: odoo-ingress
  annotations:
    # kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/secure-backends: "true"
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # # kubernetes.io/ingress.allow-http: "false"
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # # nginx.ingress.kubernetes.io/rewrite-target: /
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # kubernetes.io/ingress.class: elb
spec:
  # tls:
  # - hosts:
  #   - flectrahq.in
  #   secretName: tls-secret
  rules:
    - host: flectrahq.in
      http:
        paths:
          - path: /
            backend:
              serviceName: odoo-sv
              servicePort: 80
